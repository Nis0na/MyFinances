# Generated by Django 5.1.1 on 2024-11-20 11:25

import backend.core.models
import django.db.models.manager
import uuid
from django.db import migrations, models, transaction


def is_valid_uuid(value):
    try:
        uuid.UUID(str(value))
        return True
    except ValueError:
        return False

def copy_or_generate_uuid(apps, schema_editor):
    model_names = [
        'client',
        'emailsendstatus',
        'error',
        'invoice',
        'invoicerecurringprofile',
        'invoiceurl',
        'monthlyreport',
        'organization',
        'receipt',
        'receiptdownloadtoken',
        'teaminvitation'
    ]

    for model_name in model_names:
        Model = apps.get_model('backend', model_name)

        all_objects = Model.objects.all()

        for obj in all_objects:
            if hasattr(obj, 'uuid') and is_valid_uuid(obj.uuid):
                obj.resource_id_raw = obj.uuid
            elif hasattr(obj, 'token') and is_valid_uuid(obj.token):
                obj.resource_id_raw = obj.token
            else:
                obj.resource_id_raw = uuid.uuid4()

        with transaction.atomic():
            Model.objects.bulk_update(all_objects, ["resource_id_raw"])


class Migration(migrations.Migration):

    dependencies = [
        ("backend", "0070_remove_invoice_invoice_id_and_more"),
    ]

    operations = [
        migrations.AlterModelManagers(
            name="client",
            managers=[
                ("objects", backend.core.models.BaseManager()),
            ],
        ),
        migrations.AlterModelManagers(
            name="emailsendstatus",
            managers=[
                ("objects", backend.core.models.BaseManager()),
            ],
        ),
        migrations.AlterModelManagers(
            name="error",
            managers=[
                ("objects", backend.core.models.BaseManager()),
            ],
        ),
        migrations.AlterModelManagers(
            name="invoice",
            managers=[
                ("objects", backend.core.models.BaseManager()),
            ],
        ),
        migrations.AlterModelManagers(
            name="invoicerecurringprofile",
            managers=[
                ("with_items", django.db.models.manager.Manager()),
                ("objects", backend.core.models.BaseManager()),
            ],
        ),
        migrations.AlterModelManagers(
            name="invoiceurl",
            managers=[
                ("objects", backend.core.models.BaseManager()),
            ],
        ),
        migrations.AlterModelManagers(
            name="monthlyreport",
            managers=[
                ("objects", backend.core.models.BaseManager()),
            ],
        ),
        migrations.AlterModelManagers(
            name="organization",
            managers=[
                ("objects", backend.core.models.BaseManager()),
            ],
        ),
        migrations.AlterModelManagers(
            name="receipt",
            managers=[
                ("objects", backend.core.models.BaseManager()),
            ],
        ),
        migrations.AlterModelManagers(
            name="receiptdownloadtoken",
            managers=[
                ("objects", backend.core.models.BaseManager()),
            ],
        ),
        migrations.AlterModelManagers(
            name="teaminvitation",
            managers=[
                ("objects", backend.core.models.BaseManager()),
            ],
        ),
        migrations.RemoveConstraint(
            model_name="invoice",
            name="backend_invoice_check_user_or_organization",
        ),
        migrations.RemoveConstraint(
            model_name="invoicerecurringprofile",
            name="backend_invoicerecurringprofile_check_user_or_organization",
        ),
        migrations.AddField(
            model_name="client",
            name="resource_id_raw",
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AddField(
            model_name="emailsendstatus",
            name="resource_id_raw",
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AddField(
            model_name="error",
            name="resource_id_raw",
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AddField(
            model_name="invoice",
            name="resource_id_raw",
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AddField(
            model_name="invoicerecurringprofile",
            name="resource_id_raw",
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AddField(
            model_name="invoiceurl",
            name="resource_id_raw",
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AddField(
            model_name="monthlyreport",
            name="resource_id_raw",
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AddField(
            model_name="organization",
            name="resource_id_raw",
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AddField(
            model_name="receipt",
            name="resource_id_raw",
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AddField(
            model_name="receiptdownloadtoken",
            name="resource_id_raw",
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AddField(
            model_name="teaminvitation",
            name="resource_id_raw",
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AddIndex(
            model_name="client",
            index=models.Index(fields=["resource_id_raw"], name="backend_cli_resourc_ea6203_idx"),
        ),
        migrations.AddIndex(
            model_name="emailsendstatus",
            index=models.Index(fields=["resource_id_raw"], name="backend_ema_resourc_324c01_idx"),
        ),
        migrations.AddIndex(
            model_name="error",
            index=models.Index(fields=["resource_id_raw"], name="backend_err_resourc_cf3c6c_idx"),
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(fields=["resource_id_raw"], name="backend_inv_resourc_f6b1c4_idx"),
        ),
        migrations.AddIndex(
            model_name="invoicerecurringprofile",
            index=models.Index(fields=["resource_id_raw"], name="backend_inv_resourc_bc603c_idx"),
        ),
        migrations.AddIndex(
            model_name="invoiceurl",
            index=models.Index(fields=["resource_id_raw"], name="backend_inv_resourc_040a0a_idx"),
        ),
        migrations.AddIndex(
            model_name="monthlyreport",
            index=models.Index(fields=["resource_id_raw"], name="backend_mon_resourc_9ba01a_idx"),
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(fields=["resource_id_raw"], name="backend_org_resourc_3b8656_idx"),
        ),
        migrations.AddIndex(
            model_name="receipt",
            index=models.Index(fields=["resource_id_raw"], name="backend_rec_resourc_823266_idx"),
        ),
        migrations.AddIndex(
            model_name="receiptdownloadtoken",
            index=models.Index(fields=["resource_id_raw"], name="backend_rec_resourc_4e4952_idx"),
        ),
        migrations.AddIndex(
            model_name="teaminvitation",
            index=models.Index(fields=["resource_id_raw"], name="backend_tea_resourc_6d3d89_idx"),
        ),
        migrations.RunPython(copy_or_generate_uuid, reverse_code=migrations.RunPython.noop)
    ]
